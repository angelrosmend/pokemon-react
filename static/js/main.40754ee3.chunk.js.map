{"version":3,"sources":["assets/img/pokedeex.png","assets/img/icon-background.png","assets/img/pokebal-icon.png","assets/img/ball.png","context/PokemonContext.jsx","hooks/useFetch.js","components/navbar/Navbar.jsx","pages/home/pokemonList/PokemonCard.jsx","pages/favorites/Favorites.jsx","components/arrows/Arrows.jsx","helpers/carouselSettings.js","pages/home/load-pages/LoadPages.jsx","pages/home/pokemonList/PokemonList.jsx","pages/home/Home.jsx","pages/pokemon-detalle/Description.jsx","pages/pokemon-detalle/SliderSprites.jsx","pages/pokemon-detalle/PokemonDetalle.jsx","hooks/useFetchDetails.js","App.jsx","reportWebVitals.js","index.js"],"names":["PokemonContext","React","createContext","PokemonContextProvider","props","useState","language","setLanguage","text","textLang","pokemonUrl","process","currentPage","setCurrentPage","urlPoke","data","loading","nextPage","prevPage","error","state","setState","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","response","urls","results","map","item","url","fetchPokemon","urlPokemon","pokemon","catch","errPokemon","getPokemonData","Promise","all","pokemonList","ids","id","sprites","urlsSpecies","species","dataSpecies","names","name","find","nombre","list","arr1","arr2","arr3","i","length","push","gatherPokemonData","next","previous","useFetch","favoritosPokemon","setFavoritosPokemon","Provider","value","gotoNextPage","gotoPrevPage","selectEn","selectEs","selectDe","likePokemon","favorite","unlikePokemon","currentFav","indexPokemon","findIndex","favPoke","slice","children","Header","isOpen","setIsOpen","useContext","fav","textSelect","idioma","Navbar","className","color","light","expand","NavbarBrand","to","src","logoPokedex","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","lang","DropdownMenu","right","DropdownItem","es","en","divider","de","PokemonCard","image","front_default","Favorites","favorites","textEmpty","empty","backgroundIicon","style","zIndex","isFavorite","includes","PrevArrow","display","NextArrow","fiveItemsSettings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","prevArrow","nextArrow","responsive","breakpoint","settings","PrevPage","textPrev","back","NextPage","textNext","PokemonList","Home","Spinner","position","width","height","top","left","Description","idPokedex","description","types","Habitat","habitat","weight","languages","title","location","heightText","weightText","flavor_text","type","SliderSprites","images","backgroundImage","backgroundSize","Carousel","Item","back_default","front_shiny","back_shiny","PokemonDetalle","match","params","urlSpecies","fetchData","res","err","idPoke","flavor_text_entries","filter","flavor","version","pokemonInfo","stats","useFetchDetails","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.40754ee3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokedeex.8ad12527.png\";","export default __webpack_public_path__ + \"static/media/icon-background.ccf3b36d.png\";","export default __webpack_public_path__ + \"static/media/pokebal-icon.22a191f1.png\";","export default __webpack_public_path__ + \"static/media/ball.d64914c2.png\";","import React,{ useState} from 'react'\nimport { useFetch } from '../hooks/useFetch';\nimport textLang from '../helpers/languages/textLang.json'\nexport const PokemonContext = React.createContext(null)\n\nexport const PokemonContextProvider = (props) => {\n\n  /*CONFIG IDIOMA*/\n    const español = 'es'\n    const english = 'en'\n    const deutsch = 'de'\n    const [language, setLanguage] = useState(español)\n    const selectEn = () => setLanguage(english)\n    const selectEs = () => setLanguage(español)\n    const selectDe = () => setLanguage(deutsch)\n    const text = textLang\n\n    /*CONFIG FETCH Y PAGINADO*/\n    const pokemonUrl = `${process.env.REACT_APP_BASE_URL}pokemon?limit=10&offset=0`\n    const [currentPage, setCurrentPage] = useState(pokemonUrl)\n\n    const {data,  prevPage, nextPage, loading} = useFetch(currentPage, language)\n\n    const gotoNextPage = () => setCurrentPage(nextPage)\n    const gotoPrevPage = () => setCurrentPage(prevPage)\n\n    /*CONFIG FAVORITOS*/\n\n    const [favoritosPokemon, setFavoritosPokemon] = useState([])\n  \n    const likePokemon = (pokemon) => setFavoritosPokemon([...favoritosPokemon, {...pokemon, favorite: pokemon.favorite = true}]);\n    \n    const unlikePokemon = (pokemon) => {\n      setFavoritosPokemon((currentFav )=> {\n        const indexPokemon = currentFav.findIndex(favPoke => favPoke.id === pokemon.id)\n        if(indexPokemon === -1)return currentFav\n        return [\n          ...currentFav.slice(0, indexPokemon),\n          ...currentFav.slice(indexPokemon + 1)\n        ]\n      })\n    }\n\n    \n    return (\n      <PokemonContext.Provider value={{data, gotoNextPage, gotoPrevPage, loading, nextPage, prevPage, language, selectEn, selectEs, selectDe, text, likePokemon, favoritosPokemon, unlikePokemon}}>\n        {props.children}\n      </PokemonContext.Provider>\n    );\n  };\n\n","import {useEffect, useState} from 'react'\nimport axios from 'axios'\n\n\n/*TRAE LA DATA DEL ENDPOINT PRINCIPAL DE LISTA DE POKEMON CON PAGINADO*/\n\nexport const useFetch = (urlPoke, language) => {\n\n    const [state, setState] = useState({data: [],\n                                       loading: true,\n                                       nextPage: null,\n                                       prevPage: null,\n                                       error: ''})\n\n    useEffect(() => {\n        let cancel \n        axios.get(urlPoke, {\n                cancelToken: new axios.CancelToken(c => cancel = c)\n             })\n             .then(response => {\n             let results = response.data.results                                                    \n             let urls = results.map(item => item.url)  /*FILTRA URLS INDIVIDUALES DE LOS POKEMON*/\n             const fetchPokemon = urlPokemon => axios.get(urlPokemon)\n                                                     .then(pokemon => pokemon.data)\n                                                     .catch(errPokemon => errPokemon)\n             const getPokemonData = urls => Promise.all(urls.map(fetchPokemon))\n             getPokemonData(urls).then(pokemonList =>{   /*HACE UN FETCH A CADA UNO DE LOS URLS INDIVIDUALES Y FILTRA LOS DATOS*/\n                let ids = pokemonList.map(item => item.id)\n                let sprites = pokemonList.map(item => item.sprites)\n                let urlsSpecies = pokemonList.map(item => item.species.url)\n               getPokemonData(urlsSpecies).then(dataSpecies =>{  /*HACE UN FETCH A CADA URL POKEMON-SPECIES PARA OBTENER EL NOMBRE EN VARIOS LENGUAJES*/\n                let names = dataSpecies.map(pokemon => pokemon.names)\n                                       .map(name => name\n                                       .find(item => item.language.name === language))\n                                       .map(nombre => nombre.name)\n                \n                \n                function gatherPokemonData(arr1, arr2, arr3) {  /*ORGANIZA LA DATA OBTENIDA DE LAS LLAMADAS EN UN ARRAY DE POKEMON*/\n                     let data = []\n                     let i = 0\n                     while(i < ids.length){\n                         data.push({id: arr1[i], name: arr2[i], sprites: arr3[i]})\n                         i++\n                     }\n                     return data\n                 }\n                 let list = gatherPokemonData(ids, names, sprites)\n                 setState({\n                    data: list,\n                    loading: false,\n                    nextPage: response.data.next,\n                    prevPage: response.data.previous,\n                    error: ''\n                   })\n                })\n             })\n             }).catch(error => {\n                 setState({\n                     data: [],\n                     loading: false,\n                     nextPage: null,\n                     prevPage: null,\n                     error: error\n                 })\n             }); \n            return () => cancel()           \n    }, [urlPoke, language]);  /*RENDERIZA LOS COMPONENTES CADA VEZ QUE CAMBIE EL URL O EL LENGUAJE SELECCIONADO*/\n    return state\n}\n\n","import React, { useContext, useState } from 'react';\nimport './navbar.css'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { logoPokedex } from '../../assets/img';\nimport { Link } from 'react-router-dom';\nimport { PokemonContext } from '../../context/PokemonContext';\n\nfunction Header(props){\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const {selectEs, selectEn, selectDe, text, language} = useContext(PokemonContext)\n  let fav = text.favorite.find(item => item.id === language).name\n  let textSelect = text.idioma.find(item => item.id === language)\n\n\n  return (\n      <Navbar className='shadow' color=\"light\" light expand=\"md\">\n        <NavbarBrand>\n          <Link to='/'>\n           <img className='logo' src={logoPokedex} alt=''/>\n        </Link>\n          </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto mr-5\" navbar>\n            <NavItem>\n              <Link to='/favorites' className='nav-link'>{fav}</Link>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                {textSelect.lang}\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={selectEs}>\n                 {textSelect.es}\n                </DropdownItem>\n                <DropdownItem onClick={selectEn}>\n                  {textSelect.en}\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={selectDe}>\n                  {textSelect.de}\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Collapse>\n      </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { PokemonContext } from '../../../context/PokemonContext'\nimport './pokemon-home.css'\n\nfunction PokemonCard({pokemon, favorite}) {\n  const {id, name, sprites} = pokemon\n  const {  likePokemon, unlikePokemon} = useContext(PokemonContext)\n\n  \n\n  let image = sprites.front_default\n    return (\n        <div className='pokemon-card mx-2 '>\n     \n          { favorite ? <i  onClick={() => unlikePokemon({id, name, image})} \n          className=\"fas fa-heart liked-pokemon\"/>\n         : \n         <i  onClick={() => likePokemon({id, name, sprites, favorite})} \n            className=\"fas fa-heart like-pokemon\"/>}\n\n            <div className=''>\n            <Link to={`/pokemon/${id}`}>\n            <div className=\"photo\"> \n              <img src={image} alt=\"...\"/>\n            </div>\n            </Link>\n           <div className='text-white text-center'> <span>{id} - </span> <span>{name}</span></div>\n            </div>\n        </div>\n    )\n}\n\nexport default PokemonCard","import React, { useContext } from 'react'\nimport { backgroundIicon } from '../../assets/img'\nimport { PokemonContext } from '../../context/PokemonContext'\nimport PokemonCard from '../home/pokemonList/PokemonCard'\nimport './favorites.css'\n\nfunction Favorites() {\n   const {favoritosPokemon: favorites, text, language} = useContext(PokemonContext)\n\n   const textEmpty = text.empty.find(item => item.id === language).name\n   \n   \n    return (\n        <div className='favorites-wrapper'>\n            <img className='background-icon' src={backgroundIicon} alt=\"\"/>\n          \n            {favorites.length < 1 ?\n            <h1 className='text-white m-auto' style={{zIndex: '1'}}>{textEmpty}</h1>:\n            favorites && favorites.map(favorite => {\n                const {id} = favorite\n                const isFavorite =  favorites.map(item=> item.id).includes(id)\n                return <PokemonCard key={id}\n                                    pokemon={favorite}\n                                    favorite={isFavorite}/>\n            })}\n        </div>\n    )\n}\n\nexport default Favorites\n","import React from 'react'\nimport './arrows.css'\n\nexport function PrevArrow(props) {\n    const { style, onClick } = props;\n    return (\n        <i\n        className={'fas fa-angle-left a-prev'}\n        style={{ ...style, display: \"block\",  }}\n        onClick={onClick}\n      />\n    )\n}\n\n\nexport function NextArrow(props) {\n  const { style, onClick } = props;\n  return (\n      <i\n      className='fas fa-angle-right a-next'\n      style={{ ...style, display: \"block\"}}\n      onClick={onClick}\n    />\n\n  )\n}\n\nexport function PrevArrowOtros(props) {\n  const { style, onClick } = props;\n  return (\n      <i\n      className={'fas fa-angle-left a-prev-otros'}\n      style={{ ...style, display: \"block\",  }}\n      onClick={onClick}\n    />\n  )\n}\n\nexport function NextArrowOtros(props) {\n    const { style, onClick } = props;\n    return (\n        <i\n        className='fas fa-angle-right a-next-otros'\n        style={{ ...style, display: \"block\"}}\n        onClick={onClick}\n      />\n  \n    )\n}\n\nexport function PrevArrowC(props) {\n  const { style, onClick } = props;\n  return (\n      <i\n      className={'fas fa-angle-left a-prev-c'}\n      style={{ ...style, display: \"block\",  }}\n      onClick={onClick}\n    />\n  )\n}\n\nexport function NextArrowC(props) {\n  const { style, onClick } = props;\n  return (\n      <i\n      className='fas fa-angle-right a-next-c'\n      style={{ ...style, display: \"block\"}}\n      onClick={onClick}\n    />\n\n  )\n}","import { NextArrow, PrevArrow } from \"../components/arrows/Arrows\";\n\nexport const fiveItemsSettings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 2,\n    initialSlide: 0,\n    prevArrow:<PrevArrow/>,\n    nextArrow:<NextArrow/>,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 2,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: false\n        }\n      }\n    ]\n  };","import React, { useContext } from 'react'\nimport { PokemonContext } from '../../../context/PokemonContext'\n\nexport function PrevPage() {\n  const {prevPage, gotoPrevPage, text, language} = useContext(PokemonContext)\n   let textPrev = text.back.find(item => item.id === language).name\n    return (\n    <div className=\"back\">\n        { prevPage ? <button  onClick={gotoPrevPage} className=\"btn go-back rounded-pill d-flex \">\n           <p className='m-auto '><i className=\"fas fa-arrow-left mr-1\"></i>{textPrev}</p>\n            </button>\n          : null}\n    </div>\n    )\n}\n\nexport function NextPage() {\n    const {nextPage, gotoNextPage, text, language} = useContext(PokemonContext)\n    let textNext = text.next.find(item => item.id === language).name\n    return (\n        <div className=\"next\">\n        {nextPage ? <button onClick={gotoNextPage} className=\"btn go-next rounded-pill d-flex\">\n          <p className=' m-auto'>{textNext} <i className=\"fas fa-arrow-right mr-3\">\n           </i></p>\n           </button>:null}\n         </div>\n    )\n}\n\n\n","import React from 'react'\nimport './pokemon-home.css'\n\nfunction PokemonList(props) {\n    return (\n        <div className='pokemon-list'>\n            <div className=\"cards-wrapper container-fluid align-items-center\">\n            {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default PokemonList\n","import React, { useContext } from 'react'\nimport Slider from 'react-slick'\nimport { Spinner } from 'reactstrap'\nimport { PokemonContext } from '../../context/PokemonContext'\nimport { fiveItemsSettings } from '../../helpers/carouselSettings'\nimport './home.css'\nimport { PrevPage, NextPage } from './load-pages/LoadPages'\nimport PokemonCard from './pokemonList/PokemonCard'\nimport PokemonList from './pokemonList/PokemonList'\n\nfunction Home() {\n    const {data, favoritosPokemon, loading}=  useContext(PokemonContext)\n\n\n    return (\n        <div className='home'>\n            <PrevPage/>\n            <PokemonList>        \n                { loading ? \n                <Spinner style={{ position: 'absolute', width: '3rem', height: '3rem', top: '50%', left: '50%' }} color='danger'/>\n                :\n                <Slider {...fiveItemsSettings}>\n                {data && data.map(pokemon => {\n                    const {id} = pokemon\n                    const isFavorite =  favoritosPokemon.map(item=> item.id).includes(id)\n                    return <PokemonCard key={id}\n                                        favorite={isFavorite}\n                                        pokemon={pokemon}/>\n                })}\n                </Slider>}\n            </PokemonList>\n            <NextPage/>\n\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\n\nfunction Description({idPokedex, name, description,types, text, habitat: Habitat,height,weight, language}) {\n\n    const data = text.habitat.find(item => item.name === Habitat.name).languages.find(item => item.id === language)\n    const {text: title, name:location} = data\n    const heightText = text.height.find(item => item.id === language).name\n    const weightText = text.weight.find(item => item.id === language).name\n  \n\n    return (\n    <div className=\"description-container\">\n        <h1 className='titulo-pokemon text-center'>{name}</h1>\n        <br/>\n        <div className=\"info-tabla\">\n        <p className='text-white text-center'>{description.flavor_text}</p>\n        <div className=\"tabla-detalle \">\n            <div className=\"table-det \">\n                <div className=\"det \">\n                <p className='text-white'><b className='subtitle'>Pokedex Nº</b> {idPokedex}</p>\n                <p className='text-white'><b className='subtitle'>{title}</b> {location}</p>\n                </div>\n                <div className=\"det\">\n               <p className='text-white'><b className='subtitle'>{heightText}</b> {height}´</p>\n                <p className='text-white'><b className='subtitle'>{weightText}</b> {weight / 5}kg</p> \n                </div>\n            </div>\n            <div className=\"types\">\n                <div className=\"types-wrapper\">\n                { types && types.map( type =>{\n                    return <img className='type-icon' src={`/img/types/${type.type.name}.png`} alt=\"\"/>\n                }\n                )}\n                </div>\n            </div>\n        </div>\n        </div>\n       \n    </div>\n    )\n}\n\nexport default Description\n","import { Carousel } from 'react-bootstrap'\nimport React from 'react'\n\nfunction SliderSprites({images, habitat}) {\n\n    return (\n    <div className=\"slider-container\"  style={{backgroundImage:`url(/img/habitats/${habitat.name}.gif)`,\n                                               backgroundSize: 'cover',\n                                               height: '100vh'}}>\n        <div className=\"slider-wrapper \">\n          <Carousel>\n            <Carousel.Item>\n                <img className=\"d-block img-slider\"  src={images.front_default} alt=\"First slide\"/>\n             </Carousel.Item>\n             <Carousel.Item>\n                <img className=\"d-block img-slider\"  src={images.back_default} alt=\"First slide\"/>\n             </Carousel.Item>\n             <Carousel.Item>\n                <img className=\"d-block img-slider\"  src={images.front_shiny} alt=\"First slide\"/>\n             </Carousel.Item>\n             <Carousel.Item>\n                <img className=\"d-block img-slider\"  src={images.back_shiny} alt=\"First slide\"/>\n             </Carousel.Item>\n              </Carousel>\n        </div>\n    </div>\n    )\n}\n\nexport default SliderSprites\n","import React, { useContext } from 'react'\nimport { Spinner } from 'reactstrap'\nimport { PokemonContext } from '../../context/PokemonContext'\nimport { useFetchDetails } from '../../hooks/useFetchDetails'\nimport Description from './Description'\nimport './pokemon.detalle.css'\nimport SliderSprites from './SliderSprites'\n\nfunction PokemonDetalle({match}) {\n  const {language, text}=  useContext(PokemonContext)\n    const id = match.params.id\n    const pokemonDetail = `${process.env.REACT_APP_BASE_URL}pokemon/${id}`\n    const {data, loading} = useFetchDetails(pokemonDetail, language)\n \n\n    if(loading) return <Spinner style={{ position: 'absolute', width: '3rem', height: '3rem', top: '50%', left: '50%' }} color='danger'/>\n    return (\n        <div className='page-detalle'>\n            <SliderSprites images={data[0].images}\n                           habitat={data[0].habitat} /> \n            <Description idPokedex={id}\n                         text={text}\n                         name={data[0].name}\n                         description={data[0].description}\n                         types={data[0].types}\n                         habitat={data[0].habitat}\n                         height={data[0].height}\n                         weight={data[0].weight}\n                         language={language}/>\n        </div>\n    )\n}\n\nexport default PokemonDetalle\n","import {useEffect, useState} from 'react'\nimport axios from 'axios'\n\n/*TRAE LA DATA DEL ENDPOINT INDIVIDUAL*/\n\nexport const useFetchDetails = (urlPoke, language) => {\n\n    const [state, setState] = useState({data: [],\n                                       loading: true,\n                                       nextPage: null,\n                                       prevPage: null,\n                                       error: ''})\n    useEffect(() => {\n        let cancel \n        axios.get(urlPoke, {\n                cancelToken: new axios.CancelToken(c => cancel = c) \n             })\n             .then(response => {\n          \n             let results = response.data\n             const { types, height, weight, sprites} = results\n\n             let urlSpecies = response.data.species.url  /*FILTRA URL POKEMON-SPECIES PARA TRAER EL NOMBRE EN VARIOS IDIOMAS*/\n             let urls = [urlSpecies]\n             const fetchData = urls => axios.get(urls)\n                                            .then(res => res.data)\n                                            .catch(err=> err)\n             const getPokemonData = urls => Promise.all(urls.map(fetchData))\n            \n             getPokemonData(urls, sprites, types, height, weight).then(data => {/*TRAE LA DATA DE SPECIES Y LA ORGANIZA*/\n               const images = sprites\n               let habitat = data[0].habitat\n              let idPoke = data[0].id\n               let description = data[0].flavor_text_entries.filter(flavor => flavor.version.name === 'alpha-sapphire').find(flavor => flavor.language.name === language )\n               let name = data[0].names.find(name => name.language.name === language)\n               function gatherPokemonData(id, name, images, description, types, habitat, height, weight, stats) {\n                 let data = []\n\n                data.push({     id,\n                                name, \n                                images, \n                                description,\n                                types,\n                                habitat,\n                                height,\n                                weight })\n                  return data   \n               }\n               let pokemonInfo = gatherPokemonData(idPoke, name.name, images, description, types, habitat, height, weight)\n               setState({\n                data: pokemonInfo,\n                loading: false, \n                error: ''\n               })\n            })\n             }).catch(error => {\n                 setState({\n                     data: [],\n                     loading: false,\n                     error: error\n                 })\n             }); \n            return () => cancel()           \n    }, [urlPoke,language]); /*RENDERIZA EL COMPONENTE CADA VEZ QUE CAMBIEN EL URL O EL LENGUAJE*/\n    return state\n}","\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport { PokemonContextProvider } from './context/PokemonContext';\nimport Favorites from './pages/favorites/Favorites';\nimport Home from './pages/home/Home';\nimport PokemonDetalle from './pages/pokemon-detalle/PokemonDetalle';\n\nfunction App() {\n  \n\n  \n  return (\n    <PokemonContextProvider>\n      <BrowserRouter>\n      <Navbar/>\n      <Switch>\n      <Route path='/' exact component={Home}/>\n      <Route path='/pokemon/:id' component={PokemonDetalle}/>\n      <Route path='/favorites' component={Favorites}/>\n      <Route component={Home}/>\n      </Switch>\n      </BrowserRouter>\n    </PokemonContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}